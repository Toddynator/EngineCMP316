#pragma once
#include "Manager.h"

namespace CMP316engine {
	class EventManager : 
		public Manager
	{
	public:
		virtual bool processEvents() = 0;
	};

	enum SystemEvent_Type
	{
		/// TODO GROUP INTO CATEGORIES, E.g. INPUT,WINDOW,SYSTEM,ETC ~ Look at game programming patterns page on events, might show a way to abstract this cleanly.
		// May instead want this in specific managers / systems. e.g. window events.
		// For now I can maybe just define only the events I currently need.

		EVENT_QUIT = 0x100,
		EVENT_TERMINATING,

		EVENT_WINDOW_SHOWN = 0x202,
		EVENT_WINDOW_HIDDEN,
		EVENT_WINDOW_EXPOSED,
		EVENT_WINDOW_MOVED,
		EVENT_WINDOW_RESIZED,
		EVENT_WINDOW_MINIMIZED,
		EVENT_WINDOW_MAXIMIZED,
		EVENT_WINDOW_RESTORED,
		EVENT_WINDOW_MOUSE_ENTER,
		EVENT_WINDOW_MOUSE_LEAVE,
		EVENT_WINDOW_FOCUS_GAINED,
		EVENT_WINDOW_FOCUS_LOST,
		EVENT_WINDOW_CLOSE_REQUESTED,
		EVENT_WINDOW_ENTER_FULLSCREEN,
		EVENT_WINDOW_LEAVE_FULLSCREEN,
		EVENT_WINDOW_DESTROYED,
		EVENT_KEY_DOWN = 0x300,
		EVENT_KEY_UP,
		EVENT_TEXT_EDITING,
		EVENT_TEXT_INPUT,
		EVENT_KEYMAP_CHANGED,
		EVENT_KEYBOARD_ADDED,
		EVENT_KEYBOARD_REMOVED,
		EVENT_TEXT_EDITING_CANDIDATES,
		EVENT_MOUSE_MOTION = 0x400,
		EVENT_MOUSE_BUTTON_DOWN,
		EVENT_MOUSE_BUTTON_UP,
		EVENT_MOUSE_WHEEL,
		EVENT_MOUSE_ADDED,
		EVENT_MOUSE_REMOVED,
		EVENT_JOYSTICK_AXIS_MOTION = 0x600,
		EVENT_JOYSTICK_BALL_MOTION,
		EVENT_JOYSTICK_HAT_MOTION,
		EVENT_JOYSTICK_BUTTON_DOWN,
		EVENT_JOYSTICK_BUTTON_UP,
		EVENT_JOYSTICK_ADDED,
		EVENT_JOYSTICK_REMOVED,
		EVENT_JOYSTICK_BATTERY_UPDATED,
		EVENT_JOYSTICK_UPDATE_COMPLETE,
		EVENT_GAMEPAD_AXIS_MOTION = 0x650,
		EVENT_GAMEPAD_BUTTON_DOWN,
		EVENT_GAMEPAD_BUTTON_UP,
		EVENT_GAMEPAD_ADDED,
		EVENT_GAMEPAD_REMOVED,
		EVENT_GAMEPAD_REMAPPED,
		EVENT_GAMEPAD_TOUCHPAD_DOWN,
		EVENT_GAMEPAD_TOUCHPAD_MOTION,
		EVENT_GAMEPAD_TOUCHPAD_UP,
		EVENT_GAMEPAD_SENSOR_UPDATE,
		EVENT_GAMEPAD_UPDATE_COMPLETE,
		EVENT_GAMEPAD_STEAM_HANDLE_UPDATED,
		EVENT_FINGER_DOWN = 0x700,
		EVENT_FINGER_UP,
		EVENT_FINGER_MOTION,
		EVENT_FINGER_CANCELED,
		EVENT_CLIPBOARD_UPDATE = 0x900,
		EVENT_DROP_FILE = 0x1000,
		EVENT_DROP_TEXT,
		EVENT_DROP_BEGIN,
		EVENT_DROP_COMPLETE,
		EVENT_DROP_POSITION,
		EVENT_AUDIO_DEVICE_ADDED = 0x1100,
		EVENT_AUDIO_DEVICE_REMOVED,
		EVENT_AUDIO_DEVICE_FORMAT_CHANGED,
		EVENT_SENSOR_UPDATE = 0x1200,
		EVENT_PEN_PROXIMITY_IN = 0x1300,
		EVENT_PEN_PROXIMITY_OUT,
		EVENT_PEN_DOWN,
		EVENT_PEN_UP,
		EVENT_PEN_BUTTON_DOWN,
		EVENT_PEN_BUTTON_UP,
		EVENT_PEN_MOTION,
		EVENT_PEN_AXIS,
		EVENT_CAMERA_DEVICE_ADDED = 0x1400,
		EVENT_CAMERA_DEVICE_REMOVED,
		EVENT_CAMERA_DEVICE_APPROVED,
		EVENT_CAMERA_DEVICE_DENIED,
		EVENT_RENDER_TARGETS_RESET = 0x2000,
		EVENT_RENDER_DEVICE_RESET,
		EVENT_RENDER_DEVICE_LOST,
		EVENT_PRIVATE0 = 0x4000,
		EVENT_PRIVATE1,
		EVENT_PRIVATE2,
		EVENT_PRIVATE3,
		EVENT_POLL_SENTINEL = 0x7F00,
		EVENT_USER = 0x8000,
		EVENT_LAST = 0xFFFF,
		EVENT_ENUM_PADDING = 0x7FFFFFFF
	};

	struct SystemEvents
	{
		SystemEvent_Type type;
	};
}

